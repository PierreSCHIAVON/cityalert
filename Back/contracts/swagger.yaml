openapi: 3.0.0
info:
  title: API Alertes Citoyennes
  version: 1.0.1
  description: >
    API permettant de remonter et gérer des alertes citoyennes, leurs catégories,
    leurs médias associés, et les participations des citoyens.
    L'authentification est gérée par un autre service — aucune authentification JWT n'est requise ici.

servers:
  - url: http://localhost:3000
    description: Serveur de développement local

paths:
  ############################
  # ALERTES
  ############################
  /api/alerts:
    get:
      summary: Récupère la liste des alertes citoyennes
      responses:
        '200':
          description: Liste récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alerte'
        '500':
          description: Erreur interne du serveur
    post:
      summary: Crée une nouvelle alerte citoyenne
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlerteInput'
      responses:
        '201':
          description: Alerte créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerte'
        '400':
          description: Données invalides

  /api/alerts/{id}:
    get:
      summary: Récupère une alerte par son identifiant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Alerte trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerte'
        '404':
          description: Alerte non trouvée
    put:
      summary: Met à jour une alerte existante
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlerteInput'
      responses:
        '200':
          description: Alerte mise à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alerte'
        '404':
          description: Alerte non trouvée
    delete:
      summary: Supprime une alerte
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Alerte supprimée avec succès
        '404':
          description: Alerte non trouvée

  ############################
  # CATEGORIES
  ############################
  /api/categories:
    get:
      summary: Récupère toutes les catégories
      responses:
        '200':
          description: Liste des catégories récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categorie'
    post:
      summary: Crée une nouvelle catégorie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorieInput'
      responses:
        '201':
          description: Catégorie créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categorie'

  /api/categories/{id}:
    get:
      summary: Récupère une catégorie par ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Catégorie trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categorie'
        '404':
          description: Catégorie non trouvée
    put:
      summary: Met à jour une catégorie
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorieInput'
      responses:
        '200':
          description: Catégorie mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categorie'
        '404':
          description: Catégorie non trouvée
    delete:
      summary: Supprime une catégorie
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Catégorie supprimée
        '404':
          description: Catégorie non trouvée

  ############################
  # MEDIAS
  ############################
  /api/media:
    get:
      summary: Récupère tous les médias
      responses:
        '200':
          description: Liste des médias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media'
    post:
      summary: Ajoute un média
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaInput'
      responses:
        '201':
          description: Média ajouté
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'

  /api/media/{id}:
    get:
      summary: Récupère un média par ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Média trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '404':
          description: Média non trouvé
    delete:
      summary: Supprime un média
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Média supprimé
        '404':
          description: Média non trouvé

  ############################
  # PARTICIPATIONS
  ############################
  /api/participations:
    get:
      summary: Liste toutes les participations
      responses:
        '200':
          description: Liste des participations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
    post:
      summary: Crée une participation à une alerte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipationInput'
      responses:
        '201':
          description: Participation créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'

  /api/participations/{id}:
    get:
      summary: Récupère une participation par ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Participation trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
        '404':
          description: Participation non trouvée
    delete:
      summary: Supprime une participation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Participation supprimée
        '404':
          description: Participation non trouvée

components:
  schemas:
    #######################
    # Alerte
    #######################
    Alerte:
      type: object
      properties:
        id:
          type: integer
        titre:
          type: string
        description:
          type: string
        dateCreation:
          type: string
          format: date-time
        statut:
          type: string
          enum: [ouverte, en_cours, resolue]
        categorie:
          $ref: '#/components/schemas/Categorie'
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        participations:
          type: array
          items:
            $ref: '#/components/schemas/Participation'
      required:
        - id
        - titre
        - description
        - dateCreation
        - statut

    AlerteInput:
      type: object
      properties:
        titre:
          type: string
        description:
          type: string
        statut:
          type: string
          enum: [ouverte, en_cours, resolue]
        categorieId:
          type: integer
      required:
        - titre
        - description

    #######################
    # Catégorie
    #######################
    Categorie:
      type: object
      properties:
        id:
          type: integer
        nom:
          type: string
        description:
          type: string
      required:
        - id
        - nom

    CategorieInput:
      type: object
      properties:
        nom:
          type: string
        description:
          type: string
      required:
        - nom

    #######################
    # Média
    #######################
    Media:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        type:
          type: string
          enum: [image, video, audio]
        alerteId:
          type: integer
      required:
        - id
        - url
        - type

    MediaInput:
      type: object
      properties:
        fichier:
          type: string
          format: binary
        type:
          type: string
          enum: [image, video, audio]
        alerteId:
          type: integer
      required:
        - fichier
        - type
        - alerteId

    #######################
    # Participation
    #######################
    Participation:
      type: object
      properties:
        id:
          type: integer
        nom:
          type: string
        message:
          type: string
        dateParticipation:
          type: string
          format: date-time
        alerteId:
          type: integer
      required:
        - id
        - nom
        - dateParticipation
        - alerteId

    ParticipationInput:
      type: object
      properties:
        nom:
          type: string
        message:
          type: string
        alerteId:
          type: integer
      required:
        - nom
        - alerteId